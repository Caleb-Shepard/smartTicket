use ticketingBeta1;

CREATE TABLE PERMISSIONS(
PERMISSION_ID int NOT NULL,
NAME VARCHAR(10),
PRIMARY KEY(PERMISSION_ID)
);

-- DEPARTMENTS and CLIENT primary key is an auto incrememnting variable, this way when new departments or clients are added there is less required information

CREATE TABLE DEPARTMENTS(
DEPARTMENT_ID int NOT NULL AUTO_INCREMENT,
NAME VARCHAR(20),
PRIMARY KEY(DEPARTMENT_ID)
);

CREATE TABLE CLIENTS(
CLIENT_ID int NOT NULL AUTO_INCREMENT,
EMAIL varchar(35),
PRIMARY KEY(CLIENT_ID)
);

/* 
User table is dependant on permissions and departments
added a variable for containing an encrypted password
this system doesn't immediatly provide a salt, a salt can be added later for convenience
*/
CREATE TABLE USERS(
USER_ID int NOT NULL AUTO_INCREMENT,
DEPARTMENT int,
PERMISSION int NOT NULL,
FNAME varchar(20),
LNAME varchar(20),
BIRTH_DAY DATE,
WORK_EMAIL varchar(35),
PERSONAL_EMAIL varchar(35),
PHONE varchar(15),
PASSWORD BINARY(64) NOT NULL,
PRIMARY KEY (USER_ID),
FOREIGN KEY (PERMISSION) REFERENCES PERMISSIONS(PERMISSION_ID),
FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENTS(DEPARTMENT_ID)
);

--created table for categories
CREATE TABLE CATEGORIES(
CATEGORY_ID int NOT NULL AUTO_INCREMENT,
NAME VARCHAR(20),
PRIMARY KEY(CATEGORY_ID)
);

-- Attempted text fields for description and later for messasge content
CREATE TABLE TICKETS(
TICKET_ID int NOT NULL AUTO_INCREMENT,
DEPARTMENT int,
CLIENT int NOT NULL,
CATEGORY int,
TITLE varchar(30),
DESCRIPTION TINYTEXT,
ASIGNEE_ID varchar(100),
OPEN_STATUS BOOLEAN,
PRIORITY int,
PRIMARY KEY (TICKET_ID),
FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
FOREIGN KEY (CLIENT) REFERENCES CLIENTS(CLIENT_ID),
FOREIGN KEY (CATEGORY) REFERENCES CATEGORIES(CATEGORY_ID)
);

CREATE TABLE MESSAGES (
MESSAGE_ID int NOT NULL AUTO_INCREMENT,
TICKET int,
CLIENT int,
USER int,
MESSAGE_CONTENT TEXT,
TIME_SENT DATE,
SENDER BOOLEAN,
PRIMARY KEY (MESSAGE_ID),
FOREIGN KEY (TICKET) REFERENCES TICKETS(TICKET_ID),
FOREIGN KEY (CLIENT) REFERENCES CLIENTS(CLIENT_ID),
FOREIGN KEY (USER) REFERENCES USERS(USER_ID)
);
